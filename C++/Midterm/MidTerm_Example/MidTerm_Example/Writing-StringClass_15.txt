std::string

1. the capacity of string can be dynamically changed
2. operator== already overloaded. it compare 2 strings' values -> not addresss
3. 


4. methods
	size(), length()
		get strings' size, length(both are same.)

	c_str()
		return pointer to the c-string representation of the string object's value


c style mirror

string mirror

void CStyleMirror(char* string)
{
	p = 0
	q = mBuffer - 1;
	while (p < q)
	{
		char temp = mBuffer[p];
		mBuffer[p] = mBuffer[q];
		mBuffer[q] = temp;

		++p;
		--q;
	}
}
std::string StringMirror(std::string string)
{
	std:string tempStr;
	for (int i=strlen(string) - 1; i >=0; --i)
	{
		tempStr += string[i];
	}
	return tempStr;
}