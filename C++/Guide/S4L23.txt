포인터 연산자

주소값을 바꾸는 것.

주소를 왜 바꿀 필요가 있을까? -> 필요가 있으니 이런 기능도 있는 것일테고 강의 끝난 후 검색..



해당 오브젝트의 사이즈만큼, 우리의 경우 8byte 증가.


int number = 100;
int& reference = number;

이 경우 int&는 해당 변수가 "참조형"임을 선언하는 것임을 헷갈리지 말 것.


5번째 이미지

포인터로 받았을 경우 생기는 문제점들을 참조에선 방지가 가능하다.
1. NULL값을 허용하지 않아서 언제나 유효한 값을 받을 수 있다.(포인터는 널포인터 등의 존재 
CPP에선 이 값을 어떻게든 NULL로 바꿀 순 있지만 까다롭기도 하고..)
2. 소유하지 않은 메모리를 가리킬 수 없다.(포인터는 *(number +1) 이런 포인터 연산을 통해 이상한 짓이 가능하기에)